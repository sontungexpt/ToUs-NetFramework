<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!--  Button Enter  -->

    <Style x:Key="btnEnter" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ThirdBackgroundColor}" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button Text  -->

    <Style x:Key="btnText" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#888888" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">

                        <!--<Grid>

                            <Icon:PackIconMaterial x:Name="IconListBox"
                                                   Kind="{TemplateBinding Icon:PackIconMaterial.Kind}"
                                                   Foreground="#F2AEBB"
                                                   Background="Transparent"
                                                   Width="40"
                                                   Height="40"
                                                   Margin="15 0 0 0"
                                                   VerticalAlignment="Center" />

                            <TextBlock x:Name="textBlock"
                                       FontSize="30"
                                       Foreground="#F2AEBB"
                                       Height="43"
                                       Opacity="1"
                                       Width="195"
                                       Text="{TemplateBinding TextBlock.Text}"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0">
                            </TextBlock>
                        </Grid>-->
                        <ContentPresenter VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DEC124" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Button Add Timetable  -->

    <Style x:Key="btnAddTimetable" TargetType="Button">
        <Setter Property="Width" Value="290" />
        <Setter Property="Height" Value="130" />
        <Setter Property="Background">

            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#665D8C" />
                    <GradientStop Offset="1" Color="#7790A6" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="23,9,30,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="30">
                        <Icon:PackIconMaterial
                            Width="50"
                            Height="50"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource FifthForegroundColor}"
                            Kind="PlusBox" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CAB5D5" />
            </Trigger>-->

            <DataTrigger Binding="{Binding Tag, ElementName=grid}" Value="True">
                <Setter Property="Width" Value="280" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  SideBar ToggleButton Style Template  -->

    <Style x:Key="btnSideBarStyle" TargetType="ToggleButton">

        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="{Binding Path=Width, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Width="340"
                        Height="70"
                        Background="Transparent"
                        CornerRadius="15"
                        SnapsToDevicePixels="True">

                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ControlPanelButton  -->

    <Style x:Key="controlButton" TargetType="Button">
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Margin" Value="20,0,0,0" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border Background="{TemplateBinding Background}">
                        <Icon:PackIconMaterial
                            Width="18"
                            Height="18"
                            Foreground="{TemplateBinding Icon:PackIconMaterial.Kind}"
                            Kind="{TemplateBinding Icon:PackIconMaterial.Kind}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#7FDCDC80" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button Control App  -->

    <Style x:Key="ButtonControlApp" TargetType="Button">

        <Setter Property="Width" Value="112.5" />
        <Setter Property="Height" Value="37.5" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate>

                    <Border Background="{TemplateBinding Border.Background}" CornerRadius="22.5">

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="21"
                            FontStyle="Normal"
                            FontWeight="Bold"
                            Foreground="{TemplateBinding TextBlock.Foreground}"
                            Text="{TemplateBinding TextBlock.Text}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Show/Hide Password  -->
    <Style TargetType="{x:Type Button}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path
                            Width="20"
                            Data="{StaticResource showPass}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding isPassword, ElementName=Root}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>

    <!--  Button Upload  -->
    <Style x:Key="btnUpload" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ThirdPrimaryColor}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource FifthPrimaryColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Width="{TemplateBinding Border.Width}"
                        Height="{TemplateBinding Border.Height}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        CornerRadius="20">

                        <Grid>

                            <Icon:PackIconMaterial
                                x:Name="IconListBox"
                                Width="36"
                                Height="36"
                                Margin="32,0,0,0"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Foreground="{TemplateBinding Foreground}"
                                Kind="{TemplateBinding Icon:PackIconMaterial.Kind}" />

                            <TextBlock
                                x:Name="textBlock"
                                Margin="87,0,0,0"
                                VerticalAlignment="Center"
                                FontSize="30"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                Text="{TemplateBinding TextBlock.Text}" />

                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DEC124" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--  Button Checkbox  -->
    <Style x:Key="CheckBoxItemStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource PrimaryColor}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="20" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsChecked" Value="True">

                <Setter Property="Background" Value="{StaticResource PrimaryColor}" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>

            <Trigger Property="IsChecked" Value="False">

                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Button Select Day  -->

    <Style
        x:Key="BtnSelectDay"
        x:Name="BtnSelectDay"
        TargetType="CheckBox">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="62,0,0,0" />
        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="CheckBox">

                    <Border Background="{TemplateBinding Background}">

                        <StackPanel Orientation="Horizontal">

                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="29"
                                FontWeight="SemiBold"
                                Foreground="{StaticResource PrimaryColor}"
                                Text="{TemplateBinding TextBlock.Text}" />
                            <CheckBox
                                Margin="10,0,0,0"
                                HorizontalAlignment="Center"
                                IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Style="{StaticResource CheckBoxItemStyle}" />
                        </StackPanel>
                        <!--  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  -->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnResetCodeEmail" TargetType="Run">

        <Setter Property="Foreground" Value="#665D8C" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>
</ResourceDictionary>